<?php

/**
 * @file
 * XML to HTML converter.
 *
 */


/**
 * Implements hook_menu().
 * Drupal menus allow urls to be used as function calls, giving Drupal gets much
 * of its power and flexibillty.
 * See https://api.drupal.org/api/drupal/modules!system!system.api.php/function/hook_menu/7
 */
function islandora_digitalus_menu() {
  return array(
    'admin/islandora/digitalus' => array(
      'title' => 'Digital Page Test Module',
      'description' => 'Configure the Digital Page solution pack.',
      'page callback' => 'drupal_get_form',
      'access arguments' => array('administer site configuration'),
      'page arguments' => array('islandora_digitalus_admin'),
      'file' => 'includes/islandora_digitalus.admin.inc',
      'type' => MENU_NORMAL_ITEM,
    ),
  );
}
/**
 * Implements hook_theme().
 *
 * We supply a pattern so we can overide templates at the theme level if needed.
 * we can append a pid to a template and the new template file will be called
 * (the pids colon should be replaced with a dash)
 */
function islandora_digitalus_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_digitalus' => array(
      'template' => 'theme/islandora-digitalus',
      'pattern' => 'islandora_digitalus__',
      'variables' => array('islandora_object' => NULL),
    ),
  );
}

/**
 * Implements hook_preprocess_theme().
 * This is a Drupal hook, not supplied by islandora.
 * Variables required for display are assembled here and passed to the template file
 * defined in the theme function.  The function defines islandora-digitalus, which
 * expands to islandora-digitalus.tpl.php.
 * The isandora object has been added to the $variables array by 
 * hook_CMODEL_PID_islandora_view_object(), whihc in this case is
 * islandora_digitalus_islandora_digitalusCModel_islandora_view_object
 * 
 */
function islandora_digitalus_preprocess_islandora_digitalus(array &$variables) {

  $islandora_object = $variables['islandora_object'];
  
  
  // ====== Semandra --- try to load meta-data =====================================================
    if (islandora_datastream_access(FEDORA_VIEW_OBJECTS, $islandora_object['DC'])) {
    try {
      $dc = $islandora_object['DC']->content;
      $dc_object = DublinCore::importFromXMLString($dc);
    }
    catch (Exception $e) {
      drupal_set_message(t('Error retrieving object %s %t', array('%s' => $islandora_object->id, '%t' => $e->getMessage())), 'error', FALSE);
    }
  }
  $variables['islandora_dublin_core'] = isset($dc_object) ? $dc_object : NULL;
  $variables['dc_array'] = isset($dc_object) ? $dc_object->asArray() : array();
  
   ///======= Semandra - Load and format MODS metadata   ================================================
   if (islandora_datastream_access(FEDORA_VIEW_OBJECTS, $islandora_object['MODS'])) {
    try {
      $mods = $islandora_object['MODS']->content;
    }
    catch (Exception $e) {
      drupal_set_message(t('Error retrieving object %s %t', array('%s' => $islandora_object->id, '%t' => $e->getMessage())), 'error', FALSE);
    }
  }
	
  if ($mods) {

  $params = array('title' => 'Titles',
		  'subTitle' => 'Sub Title',
		  'name' => 'Name', 
		  'classification' => 'Classification', 
		  'subjectTopic' => 'Subject Topic',
		  'subjectOccupation' => 'Subject Occupation',
		  'subjectName' => 'Subject Name',
		  'subjectGeographic' => 'Subject Geographic',
		  'subjectHierGeographic' => 'Subject Hierarchical Geographic',
		  'subjectCartographic' => 'Subject Cartographic',
		  'subjectTemporal' => 'Subject Temporal',
		  'subjectLocalname' => 'Subject Local Name',
		  'abstract' => 'Abstract',
		  'toc' => 'Table of Contents',
		  'note' => 'Note',
		  'dateIssued' => 'Date Issued',
		  'dateCreated' => 'Date Created',
		  'dateCaptured' => 'Date Captured',
		  'dateOther' => 'Date Other',
		  'publisher' => 'Publisher',
		  'genre' => 'Genre',
		  'typeOfResource' => 'Type of Resource',
		  'extent' => 'Extent',
		  'form' => 'Form',
		  'mediaType' => 'Media Type',
		  'mimeType' => 'Mime Type',
		  'identifier' => 'Identifier',
		  'physicalLocation' => 'Physical Location',
		  'shelfLocation' => 'Shelf Location',
		  'url' => 'URL',
		  'holdingSubLocation' => 'Holding Sublocation',
		  'holdingShelfLocator' => 'Holding Shelf Locator',
		  'electronicLocator' => 'Electronic Locator',
		  'language' => 'Language',
		  'relatedItem' => 'Related Item',
		  'accessCondition' => 'Access Condition');
  
  
        $file = drupal_get_path('module', 'islandora_digitalus') . '/xsl/mods_display.xsl';
		 
		
      $xslt = new XSLTProcessor();
      $xslt_dom = new DOMDocument();
      $xslt_dom->load($file);
      $input = new DOMDocument();
      $did_load_ok = $input->loadXML($mods);
      if ($did_load_ok) {
		  $xslt->importStylesheet($xslt_dom);
		  foreach($params as $k => $v){
			  //debug for fun
			  //drupal_set_message($k);
			  $xslt->setParameter('',$k,$v);
		  }
	
		  $variables['metadata'] = $xslt->transformToXml($input);
      };
  
  };
  
  
  ///==============================
  
  // Thumbnail.
  if (isset($islandora_object['TN'])) {
    $thumbnail_size_url = url("islandora/object/{$islandora_object->id}/datastream/TN/view");
    $params = array(
      'title' => $islandora_object->label,
      'path' => $thumbnail_size_url,
    );
    $variables['islandora_thumbnail_img'] = theme('image', $params);
  };
  
  //SEMANDRA - adding page image to $variables to display on page
/*  if (isset($islandora_object['image1'])) {
  	$page_image_url = url("islandora/object/{$islandora_object->id}/datastream/image1");
    $params = array(
      'title' => $islandora_object->label,
      'path' => $page_image_url,
    );
    $variables['islandora_page_img'] = theme('image', $params);
  };*/
  
  $variables['islandora_object_page_image'] = url("islandora/object/{$islandora_object->id}/datastream/"); // SEMANDRA - path to page images
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 * If an object's behavior is defined by the islandora_digitalus_islandora_digitalusCModel content model
 * this hook takes the object being displayed and sends it to the theme function described by islandora_digitalus_theme.
 * A reference to the islandora object being displayed is added here as a member of
 * the array whihc makes the seond argument to the theme function.
 */
function islandora_digitalus_islandora_digitalusCModel_islandora_view_object($object, $page_number, $page_size) {
  $output = theme('islandora_digitalus', array('islandora_object' => $object));
  return array('' => $output);
}

/**
 * Implements hook_islandora_ingest_steps().
 * This hook adds a single ingest step, but more could be added as seperate entries.
 */
function islandora_digitalus_islandora_digitalusCModel_islandora_ingest_steps(array $configuration) {
  return array(
    'islandora_digitalus_file_upload' => array(
      'weight' => 10,
      'type' => 'form',
      'form_id' => 'islandora_digitalus_upload_form',
      'module' => 'islandora_digitalus',
      'file' => 'includes/islandora_digitalus_upload.form.inc'
    )
  );
}

/**
 * Implements hook_CMODEL_PID_islandora_object_ingested().
 * This hook tells Islandora what to do with the object once it has been ingested.
 * In this case the raw text has been uploaded so we'll be in a position to 
 * use that as input for our derived datastreams. The function
 * islandora_digitalus_create_all_derivatives will be called with a refrence to the 
 * as yet uningested object. 
 */
function islandora_digitalus_islandora_digitalusCModel_islandora_object_ingested($object) {
  module_load_include('inc', 'islandora_digitalus', 'includes/derivatives');
  islandora_digitalus_create_all_derivatives($object);
}

/**
 * Implements hook_islandora_xml_form_builder_forms().
 * This hook makes a predefined ingest form for ingest.
 */
function islandora_digitalus_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_digitalus');
  return array(
    'Digitalus MODS form' => array(
      'form_file' => "$module_path/xml/islandora_digitalus_form_mods.xml",
    ),
  );
}

/**
 * Implements hook_islandora_content_model_forms_form_associations().
 * This hook associated our form with our content model.  Any time we try to ingest
 * an object with the islandora:digitalusCModel content model, we will see this form
 * allowing us to supply relevant metadata.
 */
function islandora_digitalus_islandora_content_model_forms_form_associations() {
  return array(
    'islandora_digitalus_mods_form' => array(
      'content_model' => 'islandora:digitalusCModel',
      'form_name' => 'Digitalus MODS form',
      'dsid' => 'MODS',
      'title_field' => array('titleInfo', 'title'),
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ),
  );
}

/**
 * Implements hook_islandora_required_objects().
 * This hook ingests a very basic content model.  It is run when the module is
 * first installed.
 */
function islandora_digitalus_islandora_required_objects(IslandoraTuque $connection) {
  $islandora_digitalus_content_model = $connection->repository->constructObject('islandora:digitalusCModel');
  $islandora_digitalus_content_model->owner = 'fedoraAdmin';
  $islandora_digitalus_content_model->label = 'Islandora Digital Page Model';
  $islandora_digitalus_content_model->models = 'fedora-system:ContentModel-3.0';

  return array(
    'islandora_digitalus' => array(
      'title' => 'Islandora Digital Page',
      'objects' => array(
        $islandora_digitalus_content_model,
      ),
    ),
  );
}



/*
==============================================================================================================
THIS IS CODE I BORROWED FROM MODS DISPLAY MASTER
I also added "theme.inc" to the theme folder and mods_display.xsl to the XSL folder.


==============================================================================================================
*/


/**
 * @file
 * Example module to demonstrate Islandora metadata display viewer framework.
 */

/**
 * Implements hook_theme().
 * see the islandora module for these functions
 */
function islandora_mods_display_theme() {
	
  return array(
    'islandora_mods_display_display' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora-mods-display-display-template',
      // We can add PIDs to the end of this pattern in our preprocess function
      // and templates will be able to have have a pid appended to the
      // template name to overide a template on a per object basis.
      // An example template might be named:
      // "unicorns-are-awesome-display-template--islandora-27.tpl.php".
      'pattern' => 'islandora_mods_display_display_template__',
      'variables' => array(
        'islandora_object' => NULL,
        'print' => NULL,
      ),
    ),
    'islandora_mods_display_description' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora-mods-display-description-template',
      // We can add PIDs to the end of this pattern in our preprocess function
      // and templates will be able to have have a pid appended to the
      // template name to overide a template on a per object basis.
      // An example template might be named:
      // "unicorns-are-awesome-description-template--islandora-27.tpl.php".
      'pattern' => 'islandora_mods_display_description_template__',
      'variables' => array('islandora_object' => NULL),
    ),
  );
}

/**
 * Implements hook_islandora_metadata_display_info().
 * This defines how the view shows up in the metadata display selector
 * and the callback. an example can be found in islandora/includes/metadata.inc
 *
 */
function islandora_mods_display_islandora_metadata_display_info() {
  return array(
    'islandora' => array(
      'label' => t('Islandora MODS'),
      'description' => t('Use MODS for metadata'),
      'metadata callback' => 'islandora_mods_display_display_callback',
      'description callback' => 'islandora_mods_display_description_callback',
    ),
  );
}

/**
 * Metadata display callback for rendering metadata from MODS.
 *
 * @param AbstractObject $object
 *   An AbstractObject representing an object within Fedora.
 * @param bool $print
 *   Whether this is for printing purposes.
 *
 * @return string
 *   Markup representing the metadata display pulled from MODS.
 */
function islandora_mods_display_display_callback(AbstractObject $object, $print = FALSE) {
  // For example purposes of the object is not a basic image let's theme it
  // instead.
  // You can look at the content model here and change the template that is used.
  // This also determines the preprocessing functions that are used in the 
  // theme.inc file
  // in_array('islandora:sp_basic_image', $object->models)

    $elements = array(
      'islandora_object' => $object,
      'print' => $print,
    );
    return theme('islandora_mods_display_display', $elements);

}

/**
 * Metadata display callback for rendering metadata from MODS.
 *
 * @param AbstractObject $object
 *   An AbstractObject representing an object within Fedora.
 *
 * @return string
 *   Markup representing the metadata display pulled from MODS.
 */
function islandora_mods_display_description_callback(AbstractObject $object) {
  // For example purposes of the object is not a basic image let's theme it
  // instead.

    $elements = array(
      'islandora_object' => $object,
    );
    return theme('islandora_mods_display_description', $elements);

}